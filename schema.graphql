schema {
  query: RootQueryType
}

scalar Datetime

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Post implements Node {
  author: User!

  """The ID of an object"""
  id: ID!
  insertedAt: Datetime
  message: String
  photos: [PostPhoto]
  relatedProject: Project
  relatedProjectName: String
  relatedProjectType: String!
  thumbnail: PostPhoto
}

type PostConnection {
  edges: [PostEdge]
  pageInfo: PageInfo!
}

type PostEdge {
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: Post
}

type PostPhoto {
  image: String!
  post: Post!
}

type Project {
  author: User!
  category: ProjectCategory!
  fileResources: [ProjectFileResource]
  introduction: String
  materials: [ProjectMaterial]
  methods: [ProjectMethod]
  name: String!
  relatedPosts: [Post]
  tip: String
}

type ProjectCategory {
  name: String!
  projects: [Project]
}

type ProjectFileResource {
  name: String!
  order: Int!
  project: Project
  url: String!
}

type ProjectMaterial {
  amountUnit: String!
  name: String!
  order: Int!
  project: Project
  url: String
}

type ProjectMethod {
  content: String!
  image: String
  order: Int!
  project: Project
  title: String
}

type RootQueryType {
  allPosts(after: String, before: String, first: Int, last: Int): PostConnection

  """Fetches an object given its ID"""
  node(
    """The id of an object."""
    id: ID!
  ): Node
  projects: [Project]
  users: [User]
  viewer: User
}

type User {
  favoriteProjects: [Project]
  followedUsers: [User]
  followingUsers: [User]
  image: String
  likedProjects: [Project]
  name: String!
  posts: [Post]
  projects: [Project]
  viewedProjects: [Project]
}

